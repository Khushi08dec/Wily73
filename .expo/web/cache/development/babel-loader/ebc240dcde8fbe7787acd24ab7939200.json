{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/khushibansal/Desktop/ToastsWily-master/screens/BookTransactionScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase';\nimport db from \"../config.js\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"bookID\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"studentID\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Issue\"\n              });\n              db.collection(\"Books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': false\n              });\n              db.collection(\"Students\").doc(_this.state.scannedStudentId).update({\n                'booksIssued': firebase.firestore.FieldValue.increment(1)\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Return\"\n              });\n              db.collection(\"Books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': true\n              });\n              db.collection(\"Students\").doc(_this.state.scannedStudentId).update({\n                'booksIssued': firebase.firestore.FieldValue.increment(-1)\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee5() {\n      var transactionType, studentEligible;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(_this.checkBookEligibility());\n\n            case 2:\n              transactionType = _context5.sent;\n\n              if (transactionType) {\n                _context5.next = 8;\n                break;\n              }\n\n              Alert.alert(\"the book does not exist in the library database\");\n\n              _this.setState({\n                scannedStudentId: \" \",\n                scannedBookId: \" \"\n              });\n\n              _context5.next = 19;\n              break;\n\n            case 8:\n              if (!(transactionType === \"Issue\")) {\n                _context5.next = 15;\n                break;\n              }\n\n              _context5.next = 11;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookIssue());\n\n            case 11:\n              studentEligible = _context5.sent;\n\n              if (studentEligible) {\n                _this.initiateBookIssue();\n\n                Alert.alert(\"book has been issued\");\n              }\n\n              _context5.next = 19;\n              break;\n\n            case 15:\n              _context5.next = 17;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookReturn());\n\n            case 17:\n              studentEligible = _context5.sent;\n\n              if (studentEligible) {\n                _this.initiateBookReturn();\n\n                Alert.alert(\"book has been returned\");\n              }\n\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookIssue = function _callee6() {\n      var studentRef, studentEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"Students\").where(\"studentID\", \"==\", _this.state.scannedStudentId).get());\n\n            case 2:\n              studentRef = _context6.sent;\n              studentEligible = \" \";\n\n              if (studentRef.docs.length === 0) {\n                _this.setState({\n                  scannedBookId: \" \",\n                  scannedStudentId: \" \"\n                });\n\n                studentEligible = false;\n                Alert.alert(\"student ID doesn't exist in the database\");\n              } else {\n                studentRef.docs.map(function (doc) {\n                  var student = doc.data();\n\n                  if (student.booksIssued < 2) {\n                    studentEligible = true;\n                  } else {\n                    studentEligible = false;\n                    alert.Alert(\"student has already issued two books\");\n\n                    _this.setState({\n                      scannedStudentId: \" \",\n                      scannedBookId: \" \"\n                    });\n                  }\n                });\n              }\n\n              return _context6.abrupt(\"return\", studentEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookReturn = function _callee7() {\n      var stransactionRef, studentEligible;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bookID\", \"==\", _this.state.scannedBookId).limit(1).get());\n\n            case 2:\n              stransactionRef = _context7.sent;\n              studentEligible = \" \";\n              transactionRef.docs.map(function (doc) {\n                var lastBookTransaction = doc.data();\n\n                if (lastBookTransaction.studentId == _this.state.scannedStudentId) {\n                  studentEligible = true;\n                } else {\n                  studentEligible = false;\n                  Alert.alert(\"book wasn't issues by the student\");\n\n                  _this.setState({\n                    scannedStudentId: \" \",\n                    scannedBookId: \" \"\n                  });\n                }\n              });\n              return _context7.abrupt(\"return\", studentEligible);\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkBookEligibility = function _callee8() {\n      var bookRef, transactionType;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"Books\").where(\"bookID\", \"==\", _this.state.scannedBookId).get());\n\n            case 2:\n              bookRef = _context8.sent;\n              transactionType = \" \";\n\n              if (bookRef.docs.length == 0) {\n                transactionType = false;\n              } else {\n                bookRef.docs.map(function (doc) {\n                  var book = doc.data();\n\n                  if (book.bookAvailability) {\n                    transactionType = \"Issue\";\n                  } else {\n                    transactionType = \"Return\";\n                  }\n                });\n              }\n\n              return _context8.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedBookId: text\n            });\n          },\n          value: this.state.scannedBookId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"bookID\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"studentID\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function _callee9() {\n            var transactionMessage;\n            return _regeneratorRuntime.async(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    transactionMessage = _this2.handleTransaction();\n\n                    _this2.setState({\n                      scannedBookId: '',\n                      scannedStudentId: ''\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 11\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#FBC02D',\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/khushibansal/Desktop/ToastsWily-master/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","initiateBookIssue","collection","add","firestore","Timestamp","now","toDate","doc","update","FieldValue","increment","initiateBookReturn","handleTransaction","checkBookEligibility","transactionType","Alert","alert","checkStudentEligibilityForBookIssue","studentEligible","checkStudentEligibilityForBookReturn","where","get","studentRef","docs","length","map","student","booksIssued","limit","stransactionRef","transactionRef","lastBookTransaction","studentId","bookRef","book","bookAvailability","transactionMessage","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","text","scanButton","buttonText","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text,\n   View,\n   TouchableOpacity,\n   TextInput,\n   Image,\n   StyleSheet,\n  KeyboardAvoidingView ,\nToastAndroid,Alert} from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase'\nimport db from '../config.js'\n\nexport default class TransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId: '',\n        scannedStudentId:'',\n        buttonState: 'normal',\n        transactionMessage: ''\n      }\n    }\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    }\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n\n      if(buttonState===\"bookID\"){\n        this.setState({\n          scanned: true,\n          scannedBookId: data,\n          buttonState: 'normal'\n        });\n      }\n      else if(buttonState===\"studentID\"){\n        this.setState({\n          scanned: true,\n          scannedStudentId: data,\n          buttonState: 'normal'\n        });\n      }\n      \n    }\n\n    initiateBookIssue = async()=>{\n      //add a transaction\n      db.collection(\"transactions\").add({\n        'studentId': this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date' : firebase.firestore.Timestamp.now().toDate(),\n        'transactionType': \"Issue\"\n      })\n      //change book status\n      db.collection(\"Books\").doc(this.state.scannedBookId).update({\n        'bookAvailability': false\n      })\n      //change number  of issued books for student\n      db.collection(\"Students\").doc(this.state.scannedStudentId).update({\n        'booksIssued': firebase.firestore.FieldValue.increment(1)\n      })\n    }\n\n    initiateBookReturn = async()=>{\n      //add a transaction\n      db.collection(\"transactions\").add({\n        'studentId': this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date' : firebase.firestore.Timestamp.now().toDate(),\n        'transactionType': \"Return\"\n      })\n      //change book status\n      db.collection(\"Books\").doc(this.state.scannedBookId).update({\n        'bookAvailability': true\n      })\n      //change number  of issued books for student\n      db.collection(\"Students\").doc(this.state.scannedStudentId).update({\n        'booksIssued': firebase.firestore.FieldValue.increment(-1)\n      })\n    }\n\n\n    handleTransaction = async()=>{\n    var transactionType = await this.checkBookEligibility();\n\n    if(!transactionType){  //function can not run\n      Alert.alert(\"the book does not exist in the library database\")\n      this.setState({\n        scannedStudentId: \" \",\n        scannedBookId: \" \"\n      })\n    }\n\n  else if(transactionType===\"Issue\"){\n    var studentEligible = await this.checkStudentEligibilityForBookIssue();\n    if(studentEligible){\n      this.initiateBookIssue();\n      Alert.alert(\"book has been issued\")\n    }\n  }\n\n  else {\n    var studentEligible = await this.checkStudentEligibilityForBookReturn();\n    if(studentEligible){\n      this.initiateBookReturn();\n      Alert.alert(\"book has been returned\")\n    }\n  }\n    }\n\n    checkStudentEligibilityForBookIssue = async()=>{\n      const studentRef = await db.collection(\"Students\").where(\"studentID\", \"==\", this.state.scannedStudentId).get()\n      var studentEligible = \" \"\n      if(studentRef.docs.length===0){\n        this.setState({\n          scannedBookId: \" \",\n          scannedStudentId: \" \"\n        })\n\n        studentEligible=false\n        Alert.alert(\"student ID doesn't exist in the database\")\n      }\n\n      else{\n        studentRef.docs.map(doc=>{\n          var student = doc.data()\n\n          if(student.booksIssued<2){\n            studentEligible= true;\n          }\n          else {\n            studentEligible = false;\n            alert.Alert(\"student has already issued two books\")\n            this.setState({\n              scannedStudentId: \" \",\n              scannedBookId: \" \"\n            })\n          }\n        })\n      }\n\n      return studentEligible;\n    }\n\n    checkStudentEligibilityForBookReturn = async() =>{\n      const stransactionRef = await db.collection(\"transactions\").where(\"bookID\", \"==\", this.state.scannedBookId).limit(1).get()\n      var studentEligible = \" \"\n      \n      transactionRef.docs.map(doc=>{\n        var lastBookTransaction = doc.data()\n\n        if(lastBookTransaction.studentId == this.state.scannedStudentId){\n          studentEligible = true;\n        }\n\n        else {\n          studentEligible = false;\n          Alert.alert(\"book wasn't issues by the student\");\n          this.setState({\n            scannedStudentId: \" \",\n            scannedBookId: \" \"\n          })\n        }\n      })\n      \n      return studentEligible;\n    }\n\n    checkBookEligibility = async()=>{\n      const bookRef = await db.collection(\"Books\").where(\"bookID\", \"==\", this.state.scannedBookId).get()\n      var transactionType = \" \"\n\n      if(bookRef.docs.length==0){\n        transactionType=false;\n      }\n\n      else{\n        bookRef.docs.map(doc=>{\n          var book = doc.data()\n\n          if(book.bookAvailability){\n            transactionType = \"Issue\"\n          }\n\n          else {\n            transactionType = \"Return\"\n          }\n        })\n      }\n\n      return transactionType;\n    }\n\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n          <KeyboardAvoidingView  style={styles.container} behavior=\"padding\" enabled>\n            <View>\n              <Image\n                source={require(\"../assets/booklogo.jpg\")}\n                style={{width:200, height: 200}}/>\n              <Text style={{textAlign: 'center', fontSize: 30}}>Wily</Text>\n            </View>\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Book Id\"\n              onChangeText={text =>this.setState({scannedBookId:text})}\n              value={this.state.scannedBookId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"bookID\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Student Id\"\n              onChangeText ={text => this.setState({scannedStudentId:text})}\n              value={this.state.scannedStudentId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"studentID\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n            <TouchableOpacity\n              style={styles.submitButton}\n              onPress={async()=>{\n                var transactionMessage = this.handleTransaction();\n                this.setState(\n                  {scannedBookId:'',\n                   scannedStudentId:''})\n              }}>\n          <Text style={styles.submitButtonText}>Submit</Text>\n            </TouchableOpacity>\n          </KeyboardAvoidingView>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 15,\n      textAlign: 'center',\n      marginTop: 10\n    },\n    inputView:{\n      flexDirection: 'row',\n      margin: 20\n    },\n    inputBox:{\n      width: 200,\n      height: 40,\n      borderWidth: 1.5,\n      borderRightWidth: 0,\n      fontSize: 20\n    },\n    scanButton:{\n      backgroundColor: '#66BB6A',\n      width: 50,\n      borderWidth: 1.5,\n      borderLeftWidth: 0\n    },\n    submitButton:{\n      backgroundColor: '#FBC02D',\n      width: 100,\n      height:50\n    },\n    submitButtonText:{\n      padding: 10,\n      textAlign: 'center',\n      fontSize: 20,\n      fontWeight:\"bold\",\n      color: 'white'\n    }\n  });"]},"metadata":{},"sourceType":"module"}